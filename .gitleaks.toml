# Configuração do Gitleaks para detecção de segredos
title = "gitleaks config"

# Configurações gerais
[gitleaks]
    # Permitir que commits passem se não houver segredos
    allowlistFile = ".gitleaks-allowlist.toml"

    # Arquivos e diretórios a serem ignorados
    [gitleaks.allowlist]
        description = "Arquivos e diretórios permitidos"
        files = [
            "package-lock.json",
            "yarn.lock",
            "pnpm-lock.yaml",
            "*.lock",
            "*.log",
            "dist/**",
            "node_modules/**",
            ".git/**",
            "*.min.js",
            "*.min.css"
        ]

        # Padrões de regex para ignorar
        regexes = [
            ".*test.*",
            ".*spec.*",
            ".*example.*",
            ".*sample.*",
            ".*mock.*",
            "sha512-[a-zA-Z0-9+/=]+",  # Hashes de integridade
            "sha[0-9]+-[a-zA-Z0-9+/=]+"  # Outros tipos de hash
        ]

# Regras de detecção de segredos
[[rules]]
    id = "generic-api-key"
    description = "Chaves de API genéricas"
    regex = '''(?i)(api[_-]?key|apikey|access[_-]?key|secret[_-]?key|private[_-]?key|auth[_-]?key|token|bearer|jwt|session[_-]?id)\s*[=:]\s*['"]?[a-zA-Z0-9_\-]{20,}['"]?'''
    tags = ["key", "api", "secret"]

[[rules]]
    id = "aws-access-key-id"
    description = "AWS Access Key ID"
    regex = '''AKIA[0-9A-Z]{16}'''
    tags = ["aws", "key"]

[[rules]]
    id = "aws-secret-access-key"
    description = "AWS Secret Access Key"
    regex = '''(?i)aws[_-]?secret[_-]?access[_-]?key\s*[=:]\s*['"]?[A-Za-z0-9/+=]{40}['"]?'''
    tags = ["aws", "secret"]

[[rules]]
    id = "github-personal-access-token"
    description = "GitHub Personal Access Token"
    regex = '''ghp_[0-9a-zA-Z]{36}'''
    tags = ["github", "token"]

[[rules]]
    id = "github-app-token"
    description = "GitHub App Token"
    regex = '''ghu_[0-9a-zA-Z]{36}'''
    tags = ["github", "token"]

[[rules]]
    id = "github-refresh-token"
    description = "GitHub Refresh Token"
    regex = '''ghr_[0-9a-zA-Z]{36}'''
    tags = ["github", "token"]

[[rules]]
    id = "google-api-key"
    description = "Google API Key"
    regex = '''AIza[0-9A-Za-z\\-_]{35}'''
    tags = ["google", "api", "key"]

[[rules]]
    id = "google-oauth-token"
    description = "Google OAuth Token"
    regex = '''ya29\\.[0-9A-Za-z\\-_]+'''
    tags = ["google", "oauth", "token"]

[[rules]]
    id = "slack-token"
    description = "Slack Token"
    regex = '''xox[baprs]-[0-9]{12}-[0-9]{12}-[0-9a-zA-Z]{24}'''
    tags = ["slack", "token"]

[[rules]]
    id = "stripe-api-key"
    description = "Stripe API Key"
    regex = '''sk_live_[0-9a-zA-Z]{24}'''
    tags = ["stripe", "api", "key"]

[[rules]]
    id = "stripe-test-api-key"
    description = "Stripe Test API Key"
    regex = '''sk_test_[0-9a-zA-Z]{24}'''
    tags = ["stripe", "api", "key", "test"]

# PayPal Client ID - removida devido a falsos positivos com hashes de integridade
# [[rules]]
#     id = "paypal-client-id"
#     description = "PayPal Client ID"
#     regex = '''[0-9a-zA-Z]{80}'''
#     tags = ["paypal", "client", "id"]

[[rules]]
    id = "facebook-access-token"
    description = "Facebook Access Token"
    regex = '''EAACEdEose0cBA[0-9A-Za-z]+'''
    tags = ["facebook", "token"]

# Twitter API Key - removida devido a falsos positivos com hashes de integridade
# [[rules]]
#     id = "twitter-api-key"
#     description = "Twitter API Key"
#     regex = '''[1-9][0-9]+-[0-9a-zA-Z]{40}'''
#     tags = ["twitter", "api", "key"]

[[rules]]
    id = "discord-bot-token"
    description = "Discord Bot Token"
    regex = '''[MN][A-Za-z\d]{23}\.[\w-]{6}\.[\w-]{27}'''
    tags = ["discord", "bot", "token"]

[[rules]]
    id = "telegram-bot-token"
    description = "Telegram Bot Token"
    regex = '''[0-9]+:[a-zA-Z0-9_-]{35}'''
    tags = ["telegram", "bot", "token"]

[[rules]]
    id = "jwt-token"
    description = "JWT Token"
    regex = '''eyJ[a-zA-Z0-9_/+-]*\.eyJ[a-zA-Z0-9_/+-]*\.[a-zA-Z0-9_/+-]*'''
    tags = ["jwt", "token"]

[[rules]]
    id = "database-connection-string"
    description = "Database Connection String"
    regex = '''(?i)(mongodb|mysql|postgresql|redis)://[^\s'"]+'''
    tags = ["database", "connection", "url"]

[[rules]]
    id = "email-password"
    description = "Email Password"
    regex = '''(?i)(email|mail|smtp)[_-]?(password|pass|pwd)\s*[=:]\s*['"]?[^\s'"]{8,}['"]?'''
    tags = ["email", "password"]

# Generic Password - removida devido a falsos positivos em documentação e DTOs
# [[rules]]
#     id = "generic-password"
#     description = "Generic Password"
#     regex = '''(?i)(password|pass|pwd|secret)\s*[=:]\s*['"]?[^\s'"]{8,}['"]?'''
#     tags = ["password", "secret"]

[[rules]]
    id = "private-key"
    description = "Private Key"
    regex = '''-----BEGIN (RSA |DSA |EC |OPENSSH )?PRIVATE KEY-----'''
    tags = ["private", "key", "rsa", "dsa", "ec"]

[[rules]]
    id = "ssh-private-key"
    description = "SSH Private Key"
    regex = '''-----BEGIN OPENSSH PRIVATE KEY-----'''
    tags = ["ssh", "private", "key"]

[[rules]]
    id = "certificate"
    description = "Certificate"
    regex = '''-----BEGIN CERTIFICATE-----'''
    tags = ["certificate", "ssl", "tls"]
